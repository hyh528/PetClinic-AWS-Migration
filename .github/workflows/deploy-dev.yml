name: Deploy to Dev Environment
on:
  push:
    branches: [ develop ]
    paths:
      - 'spring-petclinic-*/**'
      - 'terraform/layers/07-application/**'
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'README.md'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Build and push Docker images
      run: |
        echo "🔄 Building and pushing Docker images..."

        # ECR 로그인
        aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com

        # 서비스 목록
        services=(
          "spring-petclinic-customers-service:customers"
          "spring-petclinic-vets-service:vets"
          "spring-petclinic-visits-service:visits"
          "spring-petclinic-admin-server:admin"
        )

        for service_pair in "${services[@]}"; do
          service_dir="${service_pair%%:*}"
          service_name="${service_pair##*:}"

          echo "📦 Building $service_dir..."

          cd "$service_dir"

          # Maven 빌드
          mvn clean package -DskipTests -q

          # Docker 빌드
          docker build -t "$service_name" . -q

          # ECR 리포지토리 URL
          ecr_repo="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic-dev-$service_name"

          # 태그 및 푸시
          docker tag "$service_name:latest" "$ecr_repo:latest"
          docker push "$ecr_repo:latest"

          echo "✅ Pushed $service_name to $ecr_repo"

          cd ..
        done

    - name: Get image digests
      id: images
      run: |
        echo "🔍 Getting latest image digests..."

        echo "customers_digest=$(aws ecr describe-images --repository-name petclinic-dev-customers --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageDigest' --output text)" >> $GITHUB_OUTPUT
        echo "vets_digest=$(aws ecr describe-images --repository-name petclinic-dev-vets --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageDigest' --output text)" >> $GITHUB_OUTPUT
        echo "visits_digest=$(aws ecr describe-images --repository-name petclinic-dev-visits --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageDigest' --output text)" >> $GITHUB_OUTPUT
        echo "admin_digest=$(aws ecr describe-images --repository-name petclinic-dev-admin --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageDigest' --output text)" >> $GITHUB_OUTPUT

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: terraform/layers/07-application
      run: terraform init -backend-config=backend.config -reconfigure

    - name: Terraform Plan
      working-directory: terraform/layers/07-application
      run: |
        terraform plan -var-file=../../envs/dev.tfvars \
          -var="service_image_map={
            customers = \"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic-dev-customers@${{ steps.images.outputs.customers_digest }}\"
            vets = \"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic-dev-vets@${{ steps.images.outputs.vets_digest }}\"
            visits = \"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic-dev-visits@${{ steps.images.outputs.visits_digest }}\"
            admin = \"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic-dev-admin@${{ steps.images.outputs.admin_digest }}\"
          }"

    - name: Terraform Apply
      working-directory: terraform/layers/07-application
      run: |
        terraform apply -auto-approve -var-file=../../envs/dev.tfvars \
          -var="service_image_map={
            customers = \"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic-dev-customers@${{ steps.images.outputs.customers_digest }}\"
            vets = \"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic-dev-vets@${{ steps.images.outputs.vets_digest }}\"
            visits = \"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic-dev-visits@${{ steps.images.outputs.visits_digest }}\"
            admin = \"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/petclinic-dev-admin@${{ steps.images.outputs.admin_digest }}\"
          }"