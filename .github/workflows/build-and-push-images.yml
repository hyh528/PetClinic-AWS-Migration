name: Build and push service images

on:
  push:
    paths:
      - 'spring-petclinic-*/**'
      - '.github/workflows/build-and-push-images.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      AWS_REGION: ap-southeast-2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build all services
        run: |
          echo "ðŸ”„ Building all services..."
          ./mvnw clean package -DskipTests -q -f spring-petclinic-customers-service/pom.xml
          ./mvnw clean package -DskipTests -q -f spring-petclinic-vets-service/pom.xml
          ./mvnw clean package -DskipTests -q -f spring-petclinic-visits-service/pom.xml
          ./mvnw clean package -DskipTests -q -f spring-petclinic-admin-server/pom.xml
          echo "âœ… All services built"

      - name: Build and push customers-service
        run: |
          echo "ðŸ”„ Building and pushing customers-service..."
          cp spring-petclinic-customers-service/target/spring-petclinic-customers-service-*.jar spring-petclinic-customers-service/app.jar
          cd spring-petclinic-customers-service
          docker build -t customers-service .
          docker tag customers-service:latest ${{ env.ECR_REGISTRY }}/petclinic-dev-customers:${{ github.sha }}
          docker push ${{ env.ECR_REGISTRY }}/petclinic-dev-customers:${{ github.sha }}
          echo "âœ… customers-service pushed"

      - name: Build and push vets-service
        run: |
          echo "ðŸ”„ Building and pushing vets-service..."
          cp spring-petclinic-vets-service/target/spring-petclinic-vets-service-*.jar spring-petclinic-vets-service/app.jar
          cd spring-petclinic-vets-service
          docker build -t vets-service .
          docker tag vets-service:latest ${{ env.ECR_REGISTRY }}/petclinic-dev-vets:${{ github.sha }}
          docker push ${{ env.ECR_REGISTRY }}/petclinic-dev-vets:${{ github.sha }}
          echo "âœ… vets-service pushed"

      - name: Build and push visits-service
        run: |
          echo "ðŸ”„ Building and pushing visits-service..."
          cp spring-petclinic-visits-service/target/spring-petclinic-visits-service-*.jar spring-petclinic-visits-service/app.jar
          cd spring-petclinic-visits-service
          docker build -t visits-service .
          docker tag visits-service:latest ${{ env.ECR_REGISTRY }}/petclinic-dev-visits:${{ github.sha }}
          docker push ${{ env.ECR_REGISTRY }}/petclinic-dev-visits:${{ github.sha }}
          echo "âœ… visits-service pushed"

      - name: Build and push admin-server
        run: |
          echo "ðŸ”„ Building and pushing admin-server..."
          cp spring-petclinic-admin-server/target/spring-petclinic-admin-server-*.jar spring-petclinic-admin-server/app.jar
          cd spring-petclinic-admin-server
          docker build -t admin-server .
          docker tag admin-server:latest ${{ env.ECR_REGISTRY }}/petclinic-dev-admin:${{ github.sha }}
          docker push ${{ env.ECR_REGISTRY }}/petclinic-dev-admin:${{ github.sha }}
          echo "âœ… admin-server pushed"


      - name: Emit images mapping artifact
        run: |
          # Map service keys to image URIs expected by terraform variable `service_image_map`
          echo "customers-service=${{ env.ECR_REGISTRY }}/petclinic-dev-customers@${{ github.sha }}" >> images.properties
          echo "vets-service=${{ env.ECR_REGISTRY }}/petclinic-dev-vets@${{ github.sha }}" >> images.properties
          echo "visits-service=${{ env.ECR_REGISTRY }}/petclinic-dev-visits@${{ github.sha }}" >> images.properties
          echo "admin-server=${{ env.ECR_REGISTRY }}/petclinic-dev-admin@${{ github.sha }}" >> images.properties
        shell: bash

      - name: Upload images artifact
        uses: actions/upload-artifact@v4
        with:
          name: images
          path: images.properties
