{"jsonrpc":"2.0","id":1,"result":{"protocolVersion":"2024-11-05","capabilities":{"experimental":{},"prompts":{"listChanged":false},"resources":{"subscribe":false,"listChanged":false},"tools":{"listChanged":false}},"serverInfo":{"name":"aws-diagram-mcp-server","version":"1.16.0"},"instructions":"Use this server to generate professional diagrams using the Python diagrams package.\n\nWORKFLOW:\n1. list_icons:\n   - Discover all available icons in the diagrams package\n   - Browse providers, services, and icons organized hierarchically\n   - Find the exact import paths for icons you want to use\n\n2. get_diagram_examples:\n   - Request example code for the diagram type you need (aws, sequence, flow, class, k8s, onprem, custom, or all)\n   - Study the examples to understand the diagram package's syntax and capabilities\n   - Use these examples as templates for your own diagrams\n   - Each example demonstrates different features and diagram structures\n\n3. generate_diagram:\n   - Write Python code using the diagrams package DSL based on the examples\n   - Submit your code to generate a PNG diagram\n   - Optionally specify a filename\n   - The diagram is generated with show=False to prevent automatic display\n   - IMPORTANT: Always provide the workspace_dir parameter to save diagrams in the user's current directory\n\nSUPPORTED DIAGRAM TYPES:\n- AWS architecture diagrams: Cloud infrastructure and services\n- Sequence diagrams: Process and interaction flows\n- Flow diagrams: Decision trees and workflows\n- Class diagrams: Object relationships and inheritance\n- Kubernetes diagrams: Container orchestration architecture\n- On-premises diagrams: Physical infrastructure\n- Custom diagrams: Using custom nodes and icons\n- AWS Bedrock diagrams: Example of using the Bedrock icon\n\nIMPORTANT:\n- Always start with get_diagram_examples to understand the syntax\n- Then use the list_icons tool to discover all available icons. These are the only icons you can work with.\n- The code must include a Diagram() definition\n- Diagrams are saved in a \"generated-diagrams\" subdirectory of the user's workspace by default\n- If an absolute path is provided as filename, it will be used directly\n- Diagram generation has a default timeout of 90 seconds\n- For complex diagrams, consider breaking them into smaller components"}}
