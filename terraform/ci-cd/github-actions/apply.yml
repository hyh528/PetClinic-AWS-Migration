name: Terraform Apply

on:
  push:
    branches: [ main, staging, production ]
    paths:
      - 'terraform/**'

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    strategy:
      matrix:
        include:
          # Development 환경
          - environment: dev
            branch: main
            layers: ["01-network", "02-security", "03-database", "04-parameter-store", "05-cloud-map", "06-lambda-genai", "07-application", "08-api-gateway", "09-monitoring", "10-aws-native", "11-state-management"]
          # Staging 환경
          - environment: staging
            branch: staging
            layers: ["01-network", "02-security", "03-database", "04-parameter-store", "05-cloud-map", "06-lambda-genai", "07-application", "08-api-gateway", "09-monitoring", "10-aws-native", "11-state-management"]
          # Production 환경
          - environment: prod
            branch: production
            layers: ["01-network", "02-security", "03-database", "04-parameter-store", "05-cloud-map", "06-lambda-genai", "07-application", "08-api-gateway", "09-monitoring", "10-aws-native", "11-state-management"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHubActions-${{ matrix.environment }}

      - name: Apply Layers Sequentially
        run: |
          for layer in ${{ join(matrix.layers, ' ') }}; do
            echo "=========================================="
            echo "Applying $layer in ${{ matrix.environment }}"
            echo "=========================================="

            cd terraform/envs/${{ matrix.environment }}/$layer

            # Terraform init
            terraform init -upgrade

            # Terraform apply
            terraform apply -var-file=../../../${{ matrix.environment }}.tfvars -auto-approve

            cd - > /dev/null
            echo "$layer applied successfully"
            echo ""
          done

      - name: Notify Success
        if: success()
        run: |
          echo "✅ Terraform apply completed successfully for ${{ matrix.environment }}"

      - name: Notify Failure
        if: failure()
        run: |
          echo "❌ Terraform apply failed for ${{ matrix.environment }}"
          # Slack 알림 등 추가 가능