# Terraform 통합 테스트 설정 파일

# 기본 설정
default:
  environment: "dev"
  aws_profile: "petclinic-dev"
  aws_region: "ap-northeast-2"
  timeout_minutes: 30
  
# 테스트 환경별 설정
environments:
  dev:
    aws_profile: "petclinic-dev"
    tfvars_file: "dev.tfvars"
    cleanup_after_test: true
    
  staging:
    aws_profile: "petclinic-staging"
    tfvars_file: "staging.tfvars"
    cleanup_after_test: true
    
  prod:
    aws_profile: "petclinic-prod"
    tfvars_file: "prod.tfvars"
    cleanup_after_test: false  # 프로덕션에서는 정리하지 않음

# 레이어 설정
layers:
  "01-network":
    description: "Network infrastructure (VPC, subnets, gateways)"
    dependencies: []
    critical: true
    timeout_minutes: 10
    
  "02-security":
    description: "Security settings (Security Groups, IAM, VPC Endpoints)"
    dependencies: ["01-network"]
    critical: true
    timeout_minutes: 15
    
  "03-database":
    description: "Database (Aurora cluster)"
    dependencies: ["01-network", "02-security"]
    critical: true
    timeout_minutes: 20
    
  "04-parameter-store":
    description: "Parameter Store (replaces Spring Cloud Config)"
    dependencies: ["01-network", "02-security"]
    critical: false
    timeout_minutes: 5
    
  "05-cloud-map":
    description: "Cloud Map (replaces Eureka)"
    dependencies: ["01-network"]
    critical: false
    timeout_minutes: 5
    
  "06-lambda-genai":
    description: "Lambda GenAI (serverless AI service)"
    dependencies: ["01-network", "02-security"]
    critical: false
    timeout_minutes: 10
    
  "07-application":
    description: "Application infrastructure (ECS, ALB, ECR)"
    dependencies: ["01-network", "02-security", "03-database"]
    critical: true
    timeout_minutes: 15
    
  "08-api-gateway":
    description: "API Gateway (replaces Spring Cloud Gateway)"
    dependencies: ["01-network", "02-security", "07-application"]
    critical: true
    timeout_minutes: 10
    
  "09-monitoring":
    description: "Monitoring (CloudWatch integration)"
    dependencies: ["01-network", "02-security", "07-application"]
    critical: false
    timeout_minutes: 10
    
  "10-aws-native":
    description: "AWS Native Services Integration"
    dependencies: ["01-network", "02-security", "06-lambda-genai", "08-api-gateway"]
    critical: false
    timeout_minutes: 10

# 테스트 시나리오 설정
test_scenarios:
  sequential_deployment:
    enabled: true
    description: "전체 레이어 순차 배포 테스트"
    
  state_file_separation:
    enabled: true
    description: "상태 파일 분리 테스트"
    
  state_locking:
    enabled: true
    description: "상태 파일 잠금 테스트"
    test_layer: "01-network"
    
  rollback_scenario:
    enabled: true
    description: "롤백 시나리오 테스트"
    test_layer: "09-monitoring"  # 비중요 레이어에서 테스트
    
  drift_detection:
    enabled: true
    description: "인프라 드리프트 감지 테스트"
    
  cross_layer_dependencies:
    enabled: true
    description: "레이어 간 의존성 테스트"

# 알림 설정
notifications:
  slack:
    enabled: false
    webhook_url: ""
    channel: "#terraform-alerts"
    
  email:
    enabled: false
    recipients: []
    
# 보고서 설정
reporting:
  formats: ["json", "html"]
  include_terraform_logs: true
  include_aws_resource_details: true
  retention_days: 30

# 보안 설정
security:
  mask_sensitive_outputs: true
  exclude_from_logs:
    - "password"
    - "secret"
    - "key"
    - "token"
    
# 성능 설정
performance:
  parallel_operations: false  # 순차 실행 강제
  max_concurrent_layers: 1
  resource_cleanup_delay_seconds: 30